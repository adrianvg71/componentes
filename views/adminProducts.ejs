<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" type="text/css" href="../../css/output.css">
  <link rel="stylesheet" type="text/css" href="../../css/style.css">
  <script src="../../js/nav2.js"></script>
  <title>Productos</title>
</head>

<body class="bg-yellow-800/25">
  <%- include('template/nav'); %>
    <div class="w-[90%] mx-auto mt-8">
      <li class="list-none p-5 ml-5">
        <a class="underline text-stone-500 text-lg font-semibold hover:text-stone-600" href="/home">Home</a>
        <span class="text-stone-500 text-lg">></span>
        <a class="underline text-stone-500 text-lg font-semibold hover:text-stone-600" href="/admin">Admin</a>
        <span class="text-stone-500 text-lg">></span>
        <span class="text-stone-500 text-lg font-semibold">Productos</span>
      </li>
      <div class="container mx-auto">
        <table class="w-full border-collapse">
          <thead>
            <tr class="bg-[#ffb67b]">
              <th class="p-4 text-center">ID</th>
              <th class="p-4 text-center">Nombre</th>
              <th class="p-4 text-center">Precio</th>
              <th class="p-4 text-center">Img</th>
              <th class="p-4 text-center">Categoria</th>
              <th class="p-4 text-center">Editar</th>
              <th class="p-4 text-center">Eliminar</th>
            </tr>
          </thead>
          <tbody>
            <% var contador = 1; %>
            <% productos.forEach(function(producto) { %>
              <% var claseFila = contador % 2 === 0 ? 'bg-orange-200' : 'bg-orange-100'; %>
              <tr class="<%= claseFila %>">
                <td class="p-2 text-center">
                  <%= producto.idproducto %>
                </td>
                <td class="p-2 text-center">
                  <%= producto.nombre %>
                </td>
                <td class="p-2 text-center">
                  <%= producto.precio %>€
                </td>
                <td class="p-2 flex justify-center items-center">
                  <img class="size-10 rounded-lg" src="<%= producto.img %>" alt="">
                </td>
                <td class="p-2 text-center">
                  <% categorias.forEach(function(categoria) { %>
                    <% if (categoria.idcategoria === producto.categoria) { %>
                      <%= categoria.nombre %>
                    <% } %>
                  <% }); %>
                </td>
                <td class="p-2 text-center">
                  <a class="flex justify-center items-center">
                    <div class="cursor-pointer bg-orange-400 p-2 rounded-lg hover:opacity-70 transition-opacity"
                      onclick="openEditModal('<%= producto.idproducto %>', '<%= producto.nombre %>', '<%= producto.precio %>', '<%= producto.img %>', '<%= producto.categoria %>')">
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="size-6 text-yellow-900">
                        <path stroke-linecap="round" stroke-linejoin="round"
                          d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" />
                      </svg>
                    </div>
                  </a>
                </td>
                <td class="p-2 text-center">
                  <div class="bg-white flex justify-center items-center w-fit mx-auto rounded-lg hover:opacity-70 transition-opacity">
                    <button class="w-full h-full block p-2"
                      onclick="openDeleteConfirmationModal('<%=producto.idproducto %>')">
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2"
                        stroke="currentColor" class="size-6 text-red-600">
                        <path stroke-linecap="round" stroke-linejoin="round"
                          d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                      </svg>
                    </button>
                  </div>
                </td>
              </tr>
              <% contador++; %>
            <% }); %>            
          </tbody>
        </table>
        <div class="p-5 mt-2">
          <button onclick="openCreateModal()"
            class="cursor-pointer bg-orange-400 rounded-lg flex justify-center items-center hover:opacity-70 transition-opacity"
            style="height: 50px; width: 50px; font-size: 60px; line-height: 60px;"><svg
              xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3.5"
              stroke="currentColor" class="size-8 text-white">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
            </svg>

          </button>
        </div>
      </div>

      <div id="deleteConfirmationModal"
        class="fixed inset-0 z-50 invisible justify-center items-center bg-black/80 transition-all opacity-0">
        <div
          class="bg-white p-8 rounded-lg fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50 justify-center items-center w-fit mx-auto">
          <p class="font-semibold text-stone-800 text-lg">¿Estás seguro de que deseas eliminar esta categoria?</p>
          <div class="flex justify-center mt-4 ">
            <button onclick="deleteProd()"
              class="hover:bg-red-800 bg-red-600 text-white px-4 py-2 rounded-md mr-2 transition-colors">Confirmar</button>
            <button onclick="closeDeleteConfirmationModal()"
              class="hover:bg-gray-500 bg-gray-300 text-gray-700 px-4 py-2 rounded-md transition-colors hover:text-white">Cancelar</button>
          </div>
        </div>
      </div>


      <!-- Modal de edición -->

      <!-- Velo negro -->
      <div id="editModal"
        class="invisible fixed  top-0 left-0 bottom-0 right-0 bg-black/80 z-50 opacity-0 w-full h-full transition-all">

        <!-- Modal -->
        <div tabindex="-1" aria-hidden="true"
          class="overflow-y-auto overflow-x-hidden fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50 justify-center items-center w-full max-w-md mx-auto bg-[#dfcdbe] rounded-lg shadow-2xl p-4 md:p-8">
          <!-- Modal contenido login-->
          <div id="loginModal" class="relative">
            <div class="flex items-center justify-between pb-4 mb-4 border-b border-black">
              <h3 class="text-xl font-semibold text-stone-800">
                Editar producto
              </h3>
              <button onclick="closeEditModal()" type="button"
                class="cerrarModal2 text-stone-900 bg-transparent transition-colors hover:bg-stone-800 hover:text-white rounded-lg size-8 ms-auto inline-flex justify-center items-center"
                data-modal-hide="authentication-modal">
                <svg class="size-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                  viewBox="0 0 14 14">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                </svg>
                <span class="sr-only">Close modal</span>
              </button>
            </div>
            <!-- Modal body -->
            <div class="p-4 md:p-5">
              <form id="editForm" name="editForm" class="space-y-4">
                <div class="mb-4">
                  <label for="nombreE" class="block mb-2 text-sm font-medium text-gray-900">Nombre</label>
                  <input type="text" name="nombre" id="nombreE"
                    class="bg-gray-200 border border-black/50 text-black text-sm rounded-lg focus:ring-black focus:border-black block w-full p-2.5 focus:outline-none"
                    placeholder="">
                </div>
                <div class="mb-4">
                  <label for="precioE" class="block mb-2 text-sm font-medium text-gray-900">Precio</label>
                  <input type="number" name="precio" id="precioE"
                    class="bg-gray-200 border border-black/50 text-black text-sm rounded-lg focus:ring-black focus:border-black block w-full p-2.5 focus:outline-none"
                    placeholder="100€">
                </div>
                <div id="imagenEdit" class="mb-4">
                  <label for="imagenE" class="block mb-2 text-sm font-medium text-gray-900">Imagen</label>
                  <label for="imagenE" class="cursor-pointer bg-gray-200 border border-black/50 text-black text-sm rounded-lg focus:ring-black focus:border-black block w-full p-2.5 focus:outline-none">
                    <img id="imagenVistaPrevia" src="#" alt="Vista previa de la imagen" class="hidden w-full">
                    <span id="textoSeleccionar" class="block">Seleccione una imagen</span>
                    <input type="file" accept="image/*" name="img" id="imagenE" class="hidden" onchange="mostrarVistaPrevia(this)">
                  </label>
                </div>
                <div>
                  <label for="categoriaE" class="block mb-2 text-sm font-medium text-gray-900">Categoria</label>
                  <select name="categoria" id="categoriaE"
                    class="bg-gray-200 border border-black/50 text-black text-sm rounded-lg focus:ring-black focus:border-black block w-full p-2.5 focus:outline-none">
                    <% categorias.forEach(function(categoria) { %>
                      <option value="<%= categoria.idcategoria %>"><%= categoria.nombre %></option>
                    <% }); %>
                  </select>
                </div>
                <button type="submit"
                  class="w-full text-white bg-orange-500 hover:bg-orange-600 focus:ring-1 focus:outline-none focus:ring-orange-950/50 font-semibold rounded-lg text-base px-5 py-2.5 text-center ">Editar</button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!--Crear modal-->
    <div id="crearModal"
      class="invisible fixed  top-0 left-0 bottom-0 right-0 bg-black/80 z-50 opacity-0 w-full h-full transition-all">

      <!-- Modal -->
      <div tabindex="-1" aria-hidden="true"
        class="overflow-y-auto overflow-x-hidden fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50 justify-center items-center w-full max-w-md mx-auto bg-[#dfcdbe] rounded-lg shadow-2xl p-4 md:p-8">
        <!-- Modal contenido login-->
        <div id="loginModal" class="relative">
          <div class="flex items-center justify-between pb-4 mb-4 border-b border-black">
            <h3 class="text-xl font-semibold text-stone-800">
              Crear producto
            </h3>
            <button onclick="closeCreateModal()" type="button"
              class="cerrarModal2 text-stone-900 bg-transparent transition-colors hover:bg-stone-800 hover:text-white rounded-lg size-8 ms-auto inline-flex justify-center items-center"
              data-modal-hide="authentication-modal">
              <svg class="size-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
              </svg>
              <span class="sr-only">Close modal</span>
            </button>
          </div>
          <!-- Modal body -->
          <div class="p-4 md:p-5">
            <form id="crearForm" name="crearForm" class="space-y-4">
              <div class="mb-4">
                <label for="nombreC" class="block mb-2 text-sm font-medium text-gray-900">Nombre</label>
                <input type="text" name="nombre" id="nombreC"
                  class="bg-gray-200 border border-black/50 text-black text-sm rounded-lg focus:ring-black focus:border-black block w-full p-2.5 focus:outline-none"
                  placeholder="nombre">
              </div>
              <div class="mb-4">
                <label for="precioC" class="block mb-2 text-sm font-medium text-gray-900">Precio</label>
                <input type="number" name="precio" id="precioC"
                  class="bg-gray-200 border border-black/50 text-black text-sm rounded-lg focus:ring-black focus:border-black block w-full p-2.5 focus:outline-none"
                  placeholder="100€">
              </div>
              <div class="mb-4">
                <label for="imagenC" class="block mb-2 text-sm font-medium text-gray-900">Imagen</label>
                <label for="imagenC" class="cursor-pointer bg-gray-200 border border-black/50 text-black text-sm rounded-lg focus:ring-black focus:border-black block w-full p-2.5 focus:outline-none">
                  <img id="imagenVistaPrevia" src="#" alt="Vista previa de la imagen" class="hidden w-full">
                  <span id="textoSeleccionar" class="block">Seleccione una imagen</span>
                  <input type="file" accept="image/*" name="img" id="imagenC" class="hidden" onchange="mostrarVistaPrevia(this)">
                </label>
              </div>
              <div>
                <label for="categoriaC" class="block mb-2 text-sm font-medium text-gray-900">Categoria</label>
                <select name="categoria" id="categoriaC"
                  class="bg-gray-200 border border-black/50 text-black text-sm rounded-lg focus:ring-black focus:border-black block w-full p-2.5 focus:outline-none">
                  <% categorias.forEach(function(categoria) { %>
                    <option value="<%= categoria.idcategoria %>"><%= categoria.nombre %></option>
                  <% }); %>
                </select>
              </div>
              <button type="submit"
                class="w-full text-white bg-orange-500 hover:bg-orange-600 focus:ring-1 focus:outline-none focus:ring-orange-950/50 font-semibold rounded-lg text-base px-5 py-2.5 text-center ">Crear</button>
            </form>
          </div>
        </div>
      </div>
    </div>
    </div>

    <script>
      let prodIdToDelete; // Variable para almacenar el ID del usuario a eliminar

      function openDeleteConfirmationModal(catId) {
        prodIdToDelete = catId;
        document.getElementById('deleteConfirmationModal').classList.toggle('invisible');
        document.getElementById('deleteConfirmationModal').style.opacity = "1";
      }

      function closeDeleteConfirmationModal() {
        prodIdToDelete = null;
        document.getElementById('deleteConfirmationModal').classList.toggle('invisible');
        document.getElementById('deleteConfirmationModal').style.opacity = "0";
      }

      function deleteProd() {
        if (prodIdToDelete) {
          // Envía la solicitud DELETE al servidor
          fetch(`/admin/productos/delete/${prodIdToDelete}`, {
            method: "DELETE"
          })
            .then(response => {
              if (response.ok) {
                // La eliminación fue exitosa, puedes hacer lo que necesites aquí
                // Por ejemplo, recargar la página
                window.location.reload();
                console.log('Producto eliminado correctamente');
              } else {
                // La eliminación falló, muestra un mensaje de error o maneja la situación según sea necesario
                console.error('Error al eliminar el producto');
              }
            })
            .catch(error => {
              // Ocurrió un error en la solicitud, muestra un mensaje de error o maneja la situación según sea necesario
              console.error('Error en la solicitud de eliminación:', error);
            });
        }
      }


      let modal = document.getElementById("editModal");
      let modal2 = document.getElementById("crearModal")
      let editForm = document.getElementById("editForm");
      let createForm = document.getElementById("crearForm")
      createForm.addEventListener("submit", crearProducto)

      function openCreateModal() {
        modal2.classList.toggle("invisible")
        modal2.style.opacity = 1;
        document.body.classList.add("overflow-hidden");
      }

      function openEditModal(prodId, nombre, precio, img, catId) {
        editForm.addEventListener("submit", () => editarProducto(prodId))
        document.getElementById("nombreE").placeholder = nombre;
        document.getElementById("precioE").placeholder = precio;
        document.querySelectorAll("option")[catId-1].selected = true
        var vistaPrevia = document.querySelector('#imagenEdit #imagenVistaPrevia');
        var textoSeleccionar = document.querySelector('#imagenEdit #textoSeleccionar');
        vistaPrevia.src = img;
        vistaPrevia.classList.remove('hidden');
        textoSeleccionar.classList.add('hidden');
        modal.classList.toggle("invisible")
        modal.style.opacity = 1;
        document.body.classList.add("overflow-hidden");
      }

      function closeEditModal() {
        modal.style.opacity = 0;
        modal.classList.toggle("invisible")
        document.body.classList.remove("overflow-hidden");
      }

      function closeCreateModal() {
        modal2.style.opacity = 0;
        modal2.classList.toggle("invisible")
        document.body.classList.remove("overflow-hidden");
      }

      async function crearProducto() {
        event.preventDefault();
        const formData = new FormData(crearForm);
        const img = await uploadImg(formData.get('img'))
        formData.delete('img')
        formData.append('img', img.data.url)
        const formJSON = Object.fromEntries(formData.entries());

        try {
          const response = await fetch(`/admin/productos/add`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(formJSON)
          });

          if (response.ok) {
            window.location.reload();
            console.log('Producto creado correctamente');
          } else {
            console.error('Error al crear un producto');
          }
        } catch (error) {
          console.error('Error de red:', error);
        }
      }

      async function editarProducto(prodId) {
        event.preventDefault();
        const formData = new FormData(editForm);
        if(formData.get('img').name) {
          console.log("hay imagen")
          formData.delete('img')
          const img = await uploadImg(formData.get('img'))
          formData.append('img', img.data.url)
        } else {
          console.log("no hay imagen")
          formData.delete('img')
        }

        const formJSON = Object.fromEntries(formData.entries());
        
        let formJSONWithContent = {};

        // Iterar sobre los demás campos y agregarlos a formJSONWithContent si tienen contenido
        for (const key in formJSON) {
          if(formJSON[key].trim() !== "") {
            formJSONWithContent[key] = formJSON[key];
          }
        }

        console.log(formJSONWithContent);
        try {
          const response = await fetch(`/admin/productos/edit/${prodId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(formJSONWithContent)
          });

          if (response.ok) {
            window.location.reload();
            console.log('Producto editado correctamente');
          } else {
            console.error('Error al editar el producto');
          }
        } catch (error) {
          console.error('Error de red:', error);
        }
      }

      async function uploadImg(img) {
        const imgbb = new FormData();
        imgbb.append('key', 'd90aae3a5315b7853918f81926725420')
        imgbb.append('image', img)

        try {
          // Realizar la solicitud HTTP POST
          const response = await fetch('https://api.imgbb.com/1/upload', {
            method: 'POST',
            body: imgbb
          });

          
          // Verificar si la solicitud fue exitosa
          if (response.ok) {
            // Extraer y devolver los datos de la respuesta como JSON
            return await response.json();
          } else {
            // Si la solicitud no fue exitosa, lanzar un error con el mensaje de error
            throw new Error('Error al subir la imagen: ' + response.statusText);
          }
        } catch (error) {
          // Capturar cualquier error y mostrarlo en la consola
          console.error('Error al subir la imagen:', error);
          throw error; // Re-lanzar el error para que el código que llama a esta función pueda manejarlo si es necesario
        }
      }

      function mostrarVistaPrevia(input) {
      var archivo = input.files[0];
      var vistaPrevia = input.parentElement.querySelector('#imagenVistaPrevia');
      var textoSeleccionar = input.parentElement.querySelector('#textoSeleccionar');

      if (archivo) {
        var lector = new FileReader();
        lector.onload = function(e) {
          vistaPrevia.src = e.target.result;
          vistaPrevia.classList.remove('hidden');
          textoSeleccionar.classList.add('hidden');
        }
        lector.readAsDataURL(archivo);
      } else {
        vistaPrevia.src = "#";
        vistaPrevia.classList.add('hidden');
        textoSeleccionar.classList.remove('hidden');
      }
    }
    </script>
</body>

</html>